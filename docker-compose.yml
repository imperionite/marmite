services:
  postgres:
    image: postgres:latest
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: mydatabase
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
    restart: always
    ports:
      - 6432:5432 # port mapping to 6432
  
  pgbouncer:
    image: pgbouncer/pgbouncer
    environment:
      DATABASE_URL: postgres://myuser:mypassword@postgres:6432/mydatabase
      PGBOUNCER_USER: myuser
      PGBOUNCER_PASSWORD: mypassword
      PGBOUNCER_PORT: 6432
    volumes:
      - ./pgbouncer.ini:/etc/pgbouncer/pgbouncer.ini:ro
    depends_on:
      - postgres
    
  nginx:
    image: nginx:alpine
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl/cert.pem:/etc/nginx/cert.pem:ro # uncomment on https; comment when testing with Social Auth
      - ./ssl/key.pem:/etc/nginx/key.pem:ro # uncomment on https; comment when testing with Social Auth
    depends_on:
      - postgres
    ports:
      - 8080:8080
    networks:
      - app-network
  k6_caching:
    image: grafana/k6
    volumes:
      - ./K6:/tests
    command: run /tests/caching_test.js
    depends_on:
      - nginx
    networks:
      - app-network

  # k6_rate_limit:
  #   image: grafana/k6
  #   volumes:
  #     - ./K6:/tests
  #   command: run /tests/rate_limit_test.js
  #   depends_on:
  #     - nginx
  #   networks:
  #     - app-network

  # k6_cache_invalidation:
  #   image: grafana/k6
  #   volumes:
  #     - ./K6:/tests
  #   command: run /tests/cache_invalidation_test.js
  #   depends_on:
  #     - nginx
  #   networks:
  #     - app-network
 

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge