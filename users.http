###### VARIABLES (tokens, etc) ######
@nonAdminUserAccess=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzQxNTAyMzkzLCJpYXQiOjE3NDE0OTE1OTMsImp0aSI6IjViY2Y4ODkxZDdiOTQ5YmM5MjkxYjFhMTA1MzNhZjk0IiwidXNlcl9pZCI6NH0.k0jI_rixfNVmI5W7Op0DXe113VL4Ic23nku2tJqo7RM
###
@adminUserAccess=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzQyNjQ0NTQ1LCJpYXQiOjE3NDI2MzM3NDUsImp0aSI6IjI1ZWQyYTdjZTE4ZjQxOGNhMzEwYzY4MGQ2M2Y3OWEyIiwidXNlcl9pZCI6MX0.h5S4vU-hbWnGMt6i8VCCDUrsC_tPU3JBLR2t5_Q7P0c
###
@refreshToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc0MjA5NzA2NiwiaWF0IjoxNzQxNDkyMjY2LCJqdGkiOiI3ODk5YjA4YjQwNmE0N2FkYTQ1NzM0OThiZjZkYjY5MiIsInVzZXJfaWQiOjR9.fCJJi1Pl9sGdituSksv6gyHN23xyvpJLykbjMaasT24
### prod site
@prodSite=https://marmite.onrender.com
########################################################################################

### login1
### A custom auth backend are implemented EmailOrUsernameModelBackend
### to be able for user to login using username or email
POST http://127.0.0.1:8000/posts/users/login/ HTTP/1.1
Content-Type: application/json

{
    "identifier": "admin",
    "password": "A#123qqq"
}

### prod login1
### A custom auth backend are implemented EmailOrUsernameModelBackend
### to be able for user to login using username or email
POST {{prodSite}}/posts/users/login/ HTTP/1.1
Content-Type: application/json

{
    "identifier": "aiotrope@sharklasers.com",
    "password": "A!123zzz"
}

### login2
### A custom auth backend are implemented EmailOrUsernameModelBackend
### to be able for user to login using username or email
POST http://127.0.0.1:8000/posts/users/login/ HTTP/1.1
Content-Type: application/json

{
    "identifier": "user2",
    "password": "passworD1#"
}


### create new user
POST https://127.0.0.1:8080/posts/users/ HTTP/1.1
Content-Type: application/json

{
    "username": "user3",
    "email": "user3@gmail.com",
    "password": "passworD1#"
}

### list all users - Protected
GET {{prodSite}}/posts/users/ HTTP/1.1
Authorization: Bearer {{adminUserAccess}}
Content-Type: application/json

### find by id - Admin
GET http://127.0.0.1:8000/posts/users/8/ HTTP/1.1
Authorization: Bearer {{adminUserAccess}}
Content-Type: application/json


### update user by Id - Owner or Admin
PUT https://127.0.0.1:8080/posts/users/2/ HTTP/1.1
Authorization: Bearer {{nonAdminUserAccess}}
Content-Type: application/json

{
    "username": "user0",
    "email": "user0@gmail.com"
}

### update user by Id - Owner or Admin
PATCH https://127.0.0.1:8080/posts/users/2/ HTTP/1.1
Authorization: Bearer {{nonAdminUserAccess}}
Content-Type: application/json

{
    "username": "user01"
}


### update user by id - Owner or Admin
PATCH https://127.0.0.1:8080/posts/users/6/ HTTP/1.1
Authorization: Bearer {{nonAdminUserAccess}}
Content-Type: application/json

{
    "password": "passworD1###"
}



### delete user by id  - Owner or Admin
DELETE https://127.0.0.1:8080/posts/users/7/ HTTP/1.1
Authorization: Bearer {{nonAdminUserAccess}}


############################## Others ##############################################

### protected route
GET https://127.0.0.1:8080/posts/protected/ HTTP/1.1
Authorization: Bearer {{nonAdminUserAccess}}
Content-Type: application/json

### posts admin route
GET https://127.0.0.1:8080/posts/admin/ HTTP/1.1
Authorization: Bearer {{nonAdminUserAccess}}
Content-Type: application/json


### user's post
GET https://127.0.0.1:8080/posts/1/ HTTP/1.1
Authorization: Bearer {{nonAdminUserAccess}}
Content-Type: application/json

### Validate JWT
POST http://127.0.0.1:8000/api/validate-token/ HTTP/1.1
Content-Type: application/json

{
    "token": "{{nonAdminUserAccess}}"
}


### obtaining refresh token via Djoser - Public
POST http://127.0.0.1:8000/auth/jwt/refresh/ HTTP/1.1
Content-Type: application/json

{
   "refresh": "{{refreshToken}}"
}

