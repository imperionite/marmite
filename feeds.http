###### VARIABLES (tokens, etc) ######
@nonAdminUserAccess=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzQxNTI0Nzg5LCJpYXQiOjE3NDE1MTM5ODksImp0aSI6Ijc2ZGQ4NjdlNWQwZjQ1YzRiMTczMTRmZjczNDBiZDdlIiwidXNlcl9pZCI6NH0._cOrE412VLzBl7t1GHFu_HfV9I4EvtFuoENrcWMfOrE
###
@adminUserAccess=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzQxNTIyODg3LCJpYXQiOjE3NDE1MTIwODcsImp0aSI6ImYzNGI5NGMzMTkzMjQ1ZmI5YTVkZTY5OWE4MjVjNjZhIiwidXNlcl9pZCI6MX0.QUBQQISi0s8HDlKvHiYWpIhTV9lwEi-O9ZTFV4aoP4Y

########################################################################################

### login1
### A custom auth backend are implemented EmailOrUsernameModelBackend
### to be able for user to login using username or email
POST http://127.0.0.1:8000/posts/users/login/ HTTP/1.1
Content-Type: application/json

{
    "identifier": "admin",
    "password": "A#123qqq"
}

### login2
### A custom auth backend are implemented EmailOrUsernameModelBackend
### to be able for user to login using username or email
POST http://127.0.0.1:8000/posts/users/login/ HTTP/1.1
Content-Type: application/json

{
    "identifier": "user2",
    "password": "passworD1#"
}

### basic feeds w/out query paramaters
GET http://127.0.0.1:8000/posts/feed/ HTTP/1.1
Authorization: Bearer {{nonAdminUserAccess}}
Content-Type: application/json


### API Call with filter=followed Query Parameter
### retrieves posts from users the authenticated user is following
GET http://127.0.0.1:8000/posts/feed/?filter=followed HTTP/1.1
Authorization: Bearer {{nonAdminUserAccess}}
Content-Type: application/json


### API Call with filter=liked Query Parameter:
### retrieves posts liked by the authenticated user.
GET http://127.0.0.1:8000/posts/feed/?filter=liked HTTP/1.1
Authorization: Bearer {{nonAdminUserAccess}}
Content-Type: application/json

### creates a new follow relationship
POST http://127.0.0.1:8000/posts/follows/ HTTP/1.1
Authorization: Bearer {{nonAdminUserAccess}}
Content-Type: application/json

{
    "following": 6
}